#!/bin/bash

# Script to install customizations on CerboGX devices

#### following lines incorporate SetupHelper utilities into this script
# Refer to the SetupHelper ReadMe file for details.

source "/data/SetupHelper/CommonResources"

# GitHub account info - fill in as appropriate
# to include this package in SetupHelper automatic updates
packageGitHubUser="tlewis99"
packageGitHubBranch="latest"

#### end of lines to include SetupHelper

echo_log() {  echo "$(date): $1" |tee -a $LOG ; }
kill_vpn() {
    PID=$(ps |grep tincd |grep -v grep | awk '{ print $1}')
    if [ "${PID}" != "" ]
    then
        kill -9 ${PID}
    fi
}

PROJ=PEEWEE
VRM=$(ifconfig wifi0 |grep HWaddr | awk '{ print $5 }' | sed "s/://g" | tr 'A-Z' 'a-z')
SERVER1=50.231.196.2
SERVER2=10.0.0.254
TARGETHOME=/data/peewee/dl
WGET="http://${SERVER1}/${VRM}.tgz"
CURL="http://${SERVER2}/vrm.php?q=${VRM}"
NET=net.tgz
RClocal=/data/rc.local
LOG=/data/${PROJ}_install.log

#### running manually and OK to proceed - prompt for input
if [ "$scriptAction" == "NONE" ] ; then

    # next step is to install
    scriptAction="INSTALL"
fi

#### install code goes here NOTE: We do re-install the same! ###
if [ "$scriptAction" == "INSTALL" -o "$scriptAction" == "REINSTALL" ] ; then
    # display initial message
    echo_log "Welcome to the PEEWEE installer ($scriptAction)"

    mkdir -p ${TARGETHOME}
    cd ${TARGETHOME}

    if /usr/bin/wget -q ${WGET} -O ${TARGETHOME}/${VRM}.tgz
    then
        echo_log "Got file ${WGET}!"
    else
        echo_log "ERROR: Could not transfer file, please investigate."
    fi

    if /bin/tar zxvf ${TARGETHOME}/${VRM}.tgz # Untar to home directory, tar within tar for safety.
    then
        echo_log "Untarred ${WGET}!"
    else
        echo_log "ERROR: Could not extract file, please investigate."
    fi

    if /bin/tar zxvf ${TARGETHOME}/${NET} -C /usr/local # Untar to /usr/local directory.
    then
        echo_log "Untarred ${NET}!"
    else
        echo_log "ERROR: Could not extract file, please investigate."
    fi

    if ${TARGETHOME}/rc.local
    then
        echo_log "Started VPN network!"
        sleep 5   ## Let things settle

        echo_log "Enabled VPN network on reboot!"
        mv ${TARGETHOME}/rc.local $RClocal

        # CURL for the customization script
        if /usr/bin/curl -s -o ${TARGETHOME}/customize.sh ${CURL}
        then
            echo_log "Got file, running customizations"
            /bin/sh ${TARGETHOME}/customize.sh
        else
            echo_log "Could not download customizations"
            if -f ${TARGETHOME}/customize.sh
            then
                echo_log "Found local customization file, using that!"
                /bin/sh ${TARGETHOME}/customize.sh
            else
                echo_log "No local customization file found =("
            fi
        fi
    else
        echo_log "ERROR: Could not start network, please investigate."
    fi

    echo_log "Completed ${PROJ} install, restarting network."
    kill_vpn
    /bin/sh $RClocal

    # set exit flags as needed
    rebootNeeded=false
fi

if [ "$scriptAction" == "UNINSTALL" ] ; then

    #### code to uninstall and deactivate package goes here
    echo_log "Removing ${PROJ} package"

    echo_log "Killing tinc process (if exists)"
    kill_vpn

    echo_log "Removing files"
    rm -rf /usr/local/etc/tinc
    rm /usr/local/sbin/tincd

    echo_log "Removing startup command $RClocal"
    rm $RClocal

    echo_log "Removal of ${PROJ} complete."

    # set exit flags as needed
    rebootNeeded=false
fi

# thats all folks - SCRIPT EXITS INSIDE THE FUNCTION
endScript
